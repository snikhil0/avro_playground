<project name="tn-traffic-kernel" default="compile" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<property file="build.properties" />
	<property file="${user.home}/build.properties" />

	<property name="artifact.name"    value = "tn-traffic-kernel" />
	<property name="artifact.version" value = "0.1-dev" />
	
	<property name="src.home"         value = "${basedir}/src" />
	<property name="src.main"         value = "${src.home}/main/java" />
	<property name="src.test"         value = "${src.home}/test/java" />
	<property name="build.home"       value = "${basedir}/build" />
	<property name="build.main"       value = "${build.home}/main" />
	<property name="build.test"       value = "${build.home}/test" />
	<property name="dist.home"        value = "${basedir}/dist" />
	<property name="docs.home"        value = "${dist.home}/docs" />
	<property name="test.home"        value = "${basedir}/test" />

	<!-- =================================================================== -->
	<!-- Construct the classpaths.                                      	 -->
	<!-- =================================================================== -->
	<path id="main.classpath">
		<fileset dir="${basedir}/lib">
			<include name="**/*.jar" />
		</fileset>
		<pathelement path="${build.main}" />
	</path>
	<path id="test.classpath">
		<fileset dir="${basedir}/lib">
			<include name="**/*.jar" />
		</fileset>
		<pathelement path="${build.main}" />
		<pathelement path="${build.test}" />
	</path>

	<!-- =================================================================== -->
	<!-- Delete all previously generated artifacts.                        	 -->
	<!-- =================================================================== -->
	<target name="clean" description="Delete old build and dist directories">
		<delete dir="${build.home}" />
		<delete dir="${dist.home}" />
		<delete dir="${test.home}" />
	</target>

	<!-- =================================================================== -->
	<!-- Prepares the directories                                       	 -->
	<!-- =================================================================== -->
	<target name="prepare">
		<mkdir dir="${build.home}" />
		<mkdir dir="${build.main}" />
		<mkdir dir="${build.test}" />
		<mkdir dir="${dist.home}" />
		<mkdir dir="${docs.home}" />
		<mkdir dir="${test.home}" />
	</target>

	<!-- =================================================================== -->
	<!-- Use Ivy to resolve dependencies.                                	 -->
	<!-- =================================================================== -->
	<target name="resolve" description="Retrieve dependencies via Ivy">
		<ivy:retrieve />
	</target>

	<!-- =================================================================== -->
	<!-- Compile main and test Java code.                                	 -->
	<!-- =================================================================== -->
	<target name="compile" depends="prepare, resolve" description="Compile main and test Java sources">
		<!-- Compile the main Java code -->
		<javac srcdir="${src.main}"
			   destdir="${build.main}"
			   debug="true"
			   deprecation="false"
			   optimize="true"
			   includeantruntime="false">
			<classpath refid="main.classpath" />
		</javac>

		<!-- Copy main resources -->
		<copy  todir="${build.main}">
		    <fileset dir="${src.main}" excludes="**/*.java"/>
		</copy>

		<!-- Compile the test Java code -->
		<javac srcdir="${src.test}" destdir="${build.test}"
			   debug="true"
			   deprecation="false"
			   optimize="true"
			   includeantruntime="false">
			<classpath refid="main.classpath" />
		</javac>

		<!-- Copy test resources -->
		<copy  todir="${build.test}">
		    <fileset dir="${src.test}" excludes="**/*.java"/>
		</copy>

	</target>

	<!-- =================================================================== -->
	<!-- Create the Javadocs                                            	 -->
	<!-- =================================================================== -->
	<target name="javadoc" depends="compile" description="Create Javadoc API documentation">
		<javadoc sourcepath="${src.main}" destdir="${docs.home}" packagenames="*">
			<classpath refid="main.classpath" />
		</javadoc>
	</target>

	<!-- =================================================================== -->
	<!-- Run the JUnit tests.                                            	 -->
	<!-- =================================================================== -->
	<target name="test" depends="compile" description="Run the junit unit tests">
		<junit printsummary="yes" haltonfailure="yes">
			<formatter type="plain" />
			<classpath refid="test.classpath" />
			<batchtest fork="yes" todir="${test.home}">
				<fileset dir="${src.test}">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<!-- =================================================================== -->
	<!-- Create the distribution artifacts.                                	 -->
	<!-- =================================================================== -->
	<target name="all" depends="compile,test,javadoc" description="Create binary distribution">
		<!-- Create application JAR file -->
		<jar jarfile="${dist.home}/${artifact.name}-${artifact.version}.jar"
			 basedir="${build.main}" />

		<!-- Create source JAR file -->
		<jar jarfile="${dist.home}/${artifact.name}-${artifact.version}-source.jar"
			 basedir="${src.main}" />

		<!-- Copy over the ivy file for the dependency listing -->
		<copy todir="${dist.home}">
		  <fileset file="${basedir}/ivy.xml"/>
		  <mapper type="regexp" from="ivy.xml" to="ivy-${artifact.version}.xml"/>
		</copy>
	</target>
	
</project>